@using DeerskinSimulation.Resources
@using DeerskinSimulation.ViewModels
@using DeerskinSimulation.Models
@using DeerskinSimulation.Components
@inject IJSRuntime JS

@code {
    [Parameter] public List<EventResult> EventArgs { get; set; }

    private string imageUrl = null;
    private string imageCaption = null;

    protected override void OnParametersSet()
    {
        // Scroll to bottom when messages are updated
        if (EventArgs?.Count > 0)
        {
            InvokeAsync(ScrollToBottomAsync);
        }
    }

    private async Task ScrollToBottomAsync()
    {
        await Task.Delay(100); // Give time for the UI to update
        await JS.InvokeVoidAsync("scrollToBottom", "console");
    }
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-auto">
            <figure class="text-center">
                <img src="@imageUrl" alt="Event Image" width="256" />
                <figcaption class="mt-2">@imageCaption</figcaption>
            </figure>
        </div>
    </div>
</div>

<div>
    <div id="console" style="height: 200px; overflow-y: scroll; border: 1px solid #8b4513; padding: 10px;">
        @if (EventArgs?.Any() == true)
        {
            @foreach (var e in EventArgs)
            {
                @foreach (var msg in e.Records)
                {
                    imageUrl = msg.Image;
                    imageCaption = msg.Message;
                    <MessageConsoleLineItem Message="msg" />
                }
            }
        }
        else
        {
            <p>@UIStr.NoMessagesLabel</p>
        }
    </div>
</div>



<script>
    window.scrollToBottom = function (elementId) {
        var element = document.getElementById(elementId);
        if (element) {
            element.scrollTop = element.scrollHeight;
        }
    };
</script>
